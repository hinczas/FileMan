@model Raf.FileMan.Models.ViewModels.ItemViewModel
@using Raf.FileMan.Models;
@using Raf.FileMan.Models.ViewModels;
@{
    ViewBag.Title = "Home Page";
}

<input type="text" value="@Model.Current.Id" id="currentPid" hidden />
<div class="col-md-12">
    <ol class="breadcrumbz">
        @if (@Model.Breadcrumbs != null || @Model.Breadcrumbs.Count() > 0)
        {
            for (int i = @Model.Breadcrumbs.Count() - 1; i >= 0; i--)
            {
                <li class="btn-group btn-group-sm bread-btn-grp">
                    @if (!@Model.Breadcrumbs.ElementAt(i).Current)
                    {
                        <button type="button" class="btn" onclick="goToFolder(@Model.Breadcrumbs.ElementAt(i).Id)">@Model.Breadcrumbs.ElementAt(i).Name</button>
                    }
                    else
                    {
                        <button type="button" class="btn">@Model.Breadcrumbs.ElementAt(i).Name</button>
                    }
                    @if (Model.Breadcrumbs.ElementAt(i).HasChildren)
                    {
                        <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-caret-right"></i>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-left">
                            @foreach (var ch in Model.Breadcrumbs.ElementAt(i).Children)
                            {
                                <li><span class="nor nor-sm" onclick="goToFolder(@ch.Id)"><i class="fas fa-folder"></i> <span>@ch.Name</span></span></li>
                            }
                        </ul>
                    }
                </li>
            }
        }
    </ol>
</div>

<div class="col-md-12">
    @*<div class="row pl-30 tools-row">*@
    @{
        var ss = (SessionState)Session["SessionState"];
        bool search = ss.Location.Equals("search");
        if (search)
        {
            <p>Search results for: <b>@ss.Search</b> <a href="@ss."></a></p>
        }
        else
        {
            <div class="float-l">
                <div class="btn-group btn-group-sm btn-group-tools" role="group">
                    <button class="btn btn-default" type="button" data-toggle="modal" data-target="#filModal" title="New Document"><i class="fas fa-file-medical"></i></button>
                    <button class="btn btn-default" type="button" data-toggle="collapse" data-target="#catCollapse" title="New Category"><i class="fas fa-folder-plus"></i></button>
                </div>
            </div>
            <div class="float-r">
                <div class="btn-group btn-group-sm btn-group-options" role="group">
                    <span><b>@Model.Current.Name</b></span>
                    <span>
                        @if (Model.Favourite)
                        {
                            <i class="fas fa-star btn-fav yc cur-point" title="Remove from favourites" onclick="delFavourite(@Model.Current.Id, @Model.FavId)"></i>
                        }
                        else
                        {
                            <i class="far fa-star btn-fav yc cur-point" title="Add to favourites" onclick="addFavourite(@Model.Current.Id, 0)"></i>
                        }
                    </span>
                    <div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                            <i class="fas fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu">
                            <li><span class="dis">Move</span></li>
                            <li><span class="nor" data-toggle="modal" data-target="#renameModal" title="Rename category">Rename</span></li>
                            @if (!Model.Current.IsRoot)
                            {
                                <li><span func="deleteCategory(@Model.Current.Id, true)" class="del" title="Delete category" id="delSpan" onmouseover="mouseEnterHandler(this)" onmouseout="mouseLeaveHandler(this)">Delete</span></li>
                            }
                            <li role="separator" class="divider"></li>
                            <li><span class="nor" data-toggle="modal" data-target="#aboutModal" title="About this category">About</span></li>
                        </ul>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- New Category -->
<div class="col-sm-12">
        <div class="collapse" id="catCollapse">
            <div class="disp-align-ver row-menu row-menu-sm">
                @using (Html.BeginForm("Create", "Folders", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "catForm", role = "form", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" class="form-control" name="Pid" value="@Model.Current.Id" />
                    <input type="hidden" class="form-control" name="Type" value="dir" />
                    <div class="col-sm-4 pos-rel">
                        <input type="text" autocomplete="off" maxlength="32" class="form-control form-control-sm info-input-icon" name="Name" placeholder="Name..." onkeypress="enterSubmit(event, '#submitBtn')" id="catNameInp" title="Use ; as delimiter for multiple names" autofocus />
                        @*<span class="pos-abs info-icon-inside" title="Use ; as delimiter for multiple names"><i class="fas fa-question-circle"></i></span>*@
                    </div>
                    <div class="col-sm-7">
                        <input type="text" autocomplete="off" class="form-control" name="Description" onkeypress="enterSubmit(event, '#submitBtn')" placeholder="Description..." />
                    </div>
                    <div class="col-sm-1">
                        <input type="button" value="add" class="btn btn-success btn-sm" id="submitBtn" onclick="createCategory('#catForm', '/Folders/Create/', '@Model.Current.Id')" />
                    </div>
                }
            </div>
        </div>
</div>

<!-- Tables -->
<div class="col-md-12">
    <!-- Folders -->
    <div id="replaceDocTable">
        <table class="table table-condensed table-hover table-folders">
            <thead class="thead-dark">
                <tr>
                    <th style="width:25px;" scope="col"></th>
                    <th style="width:200px;" scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody id="mainTable">
                @if (Model.Current.IsRoot)
                {
                    <tr>
                        <td scope="row" style="width:25px;">
                            <i class="fas fa-folder"></i>
                        </td>
                        <td colspan="2">...</td>
                    </tr>
                }
                else
                {
                    <tr ondrop="drop(event)" ondragover="allowDrop(event)" class="draggable" id="cat_@Model.Current.Parent.Id">
                        <td style="cursor:pointer; width:25px;" scope="row" onclick="goToFolder(@Model.Current.Pid)">
                            <i class="fas fa-reply"></i>
                        </td>
                        <td colspan="2" style="cursor:pointer;" onclick="goToFolder(@Model.Current.Pid)">...</td>
                    </tr>
                }
                @foreach (Folder itm in Model.ChildrenDirs)
                {
                    <tr ondrop="drop(event)" ondragover="allowDrop(event)" class="draggable" draggable="true" ondragstart="drag(event)" id="cat_@itm.Id">
                        <td style="cursor:pointer;" scope="row" onclick="goToFolder(@itm.Id)">
                            <i class="fas fa-folder"></i>
                        </td>
                        <td style="cursor:pointer;" onclick="goToFolder(@itm.Id)">@itm.Name</td>
                        <td style="cursor:pointer; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; max-width:250px;" title="@itm.Description" onclick="goToFolder(@itm.Id)">@itm.Description</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <!-- Documents -->
    <table class="table table-condensed table-hover">
        <thead class="thead-dark">
            <tr>
                <th style="width:25px;" scope="col"></th>
                <th style="width:200px;" scope="col">Number</th>
                <th scope="col">Name</th>
                <th scope="col">Ver</th>
            </tr>
        </thead>
        <tbody id="mainTable">
            @foreach (MasterFile itm in Model.ChildrenFiles)
            {
            <tr title="@itm.Description" draggable="true" ondragstart="drag(event)" id="doc_@itm.Id">
                <td scope="row" style="cursor:pointer;" onclick="goToFile(@itm.Id, @Model.Current.Id)">
                    <i class="fas fa-file"></i>
                </td>
                <td style="cursor:pointer;" onclick="goToFile(@itm.Id, @Model.Current.Id)">
                    @itm.Number
                    @if (itm.Locked)
                    {
                        <i class="fas fa-lock lock-sm" title="Locked"></i>
                    }
                </td>
                <td style="cursor:pointer;" onclick="goToFile(@itm.Id, @Model.Current.Id)">@itm.Name</td>
                <td>
                    @if (itm.Revisions != null && itm.Revisions.Count() > 0)
                    {
                        var draft = itm.Revisions.OrderByDescending(a => a.Id).Take(1).FirstOrDefault();
                        <a href="FileRevisions/GetFile/@draft.Id" class="complex-a">
                            <img class="icon" src="~/Content/Images/Icons/32px/@draft.Icon" />
                            <span>@draft.Draft</span>
                            <i class="fas fa-angle-double-down"></i>
                        </a>
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

<!-- Unassigned -->
@if (Model.UnassignedFiles != null && @Model.UnassignedFiles.Count() > 0)
{
    using (Html.BeginForm("MoveFiles", "Folders", FormMethod.Post, new { enctype = "multipart/form-data", id = "moveFilesForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12">
            <input type="hidden" name="Id" value=@Model.Current.Id />
            <div class="panel-group">
                <div class="panel panel-warning">
                    <div class="panel-heading panel-title">
                        <div class="container" style="align-items:center; width:100%; padding:0px;">
                            <h4 class="cus-h4">
                                <a data-toggle="collapse" href="#collapse1">Uncategorised</a>
                            </h4>
                            <span class="badge badge-light">@Model.UnassignedFiles.Count()</span>
                            <div class="input-group input-group-sm pull-right" style="max-width:200px;">
                                <input type="text" class="form-control form-control-sm" id="searchItems" onkeyup="searchUnassigned(this)" placeholder="filter..." name="search" style="width:200px;" />

                                <span class="input-group-btn">
                                    <button type="button" name="action" class="btn btn-sm btn-primary" onclick="moveDocuments('#moveFilesForm')">Move</button>
                                </span>
                            </div><!-- /input-group -->
                        </div>
                    </div>
                    <div id="collapse1" class="panel-collapse collapse">
                        <table class="table table-condensed" id="tbl-unassigned">
                            <thead class="thead-dark">
                                <tr>
                                    <th width="1%"><input class="check-all-items" name="toggle" type="checkbox" value="0" onchange="checkAllItems(this)" /></th>
                                    <th style="width:70px;" scope="col">Number</th>
                                    <th style="width:25px;" scope="col">Ver</th>
                                    <th style="width:350px;" scope="col">Name</th>
                                    <th style="width:130px;" scope="col">Added</th>
                                    <th style="width:130px;" scope="col">Edited</th>
                                    @*<th scope="col"></th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (MasterFile itm in Model.UnassignedFiles)
                                {
                                    <tr draggable="true" ondragstart="drag(event)" id="doc_@itm.Id">
                                        <td scope="row"><input type="checkbox" class="form-check-input" name="files" value=@itm.Id style="margin-top:2px;"></td>
                                        <td style="cursor:pointer;" onclick="goToFile(@itm.Id)">
                                            @itm.Number
                                            @if (itm.Locked)
                                            {
                                                <i class="fas fa-lock lock-sm" title="Locked"></i>
                                            }
                                        </td>
                                        <td style="cursor:pointer;" onclick="goToFile(@itm.Id)">
                                            @if (itm.Revisions != null && itm.Revisions.Count() > 0)
                                            {
                                                <span>@itm.Revisions.OrderByDescending(a => a.Id).Take(1).FirstOrDefault().Draft</span>
                                            }
                                        </td>
                                        <td style="cursor:pointer;" onclick="goToFile(@itm.Id)">@itm.Name</td>
                                        <td style="cursor:pointer;" onclick="goToFile(@itm.Id)">@itm.Added</td>
                                        <td style="cursor:pointer;" onclick="goToFile(@itm.Id)">@itm.Edited</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
}


<!-- Directory About Modal -->
<div id="aboutModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h3>@Model.Current.Name</h3>
            </div>
            <div class="modal-body">
                <h4>Description</h4>
                <p>
                    <span style="white-space: pre-line">@Model.Current.Description</span>
                </p><br />
                <h4>ChangeLog</h4>
                <p>

                    <span style="white-space: pre-line">@Model.Current.Changelog</span>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Directory Rename Modal -->
<div id="renameModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h3>Renaming <b>@Model.Current.Name</b></h3>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Rename", "Folders", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "docRenameForm", @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                {
                    <input type="text" value="@Model.Current.Id" name="id" hidden />
                    <input type="text" class="form-control form-control-sm input-wide" name="name" id="newCatName" placeholder="New name..." />
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" onclick="renameCategory('#docRenameForm')">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- File Modal -->
<div id="filModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("Create", "MasterFiles", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "newDocForm", @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">New Document</h4>
                </div>
                <div class="modal-body">
                    <div class="col-md-12" style="float:none">
                        <input type="hidden" class="form-control" name="FolderId" value="@Model.Current.Id" />
                        <input type="hidden" class="form-control" name="Number" value="0" />
                        <div class="form-group">
                            <input type="Text" autocomplete="off" class="form-control" name="Name" placeholder="Name..." autofocus />
                        </div>
                        <div class="form-group">
                            <textarea rows="5" autocomplete="off" cols="10" class="form-control" name="Description" placeholder="Description..."></textarea>
                        </div>
                        <div class="form-group">
                            <span class="cur-point" data-toggle="collapse" data-target="#commMod">Additional information (optional)</span>

                            <div id="commMod" class="collapse">
                                <textarea rows="3" autocomplete="off" cols="10" class="form-control" name="Comment" placeholder="Extra info..."></textarea>
                            </div>

                        </div>
                        @*<div class="form-group">
                                <input style="margin-bottom: 10px;" class="form-control" type="file" name="file">
                            </div>*@

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" onclick="createDocument('#newDocForm', '@Model.Current.Id')">Save</button>
                </div>
            }
        </div>
    </div>
</div>

